name: Coverity Project Pipeline

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Project Name'
        required: true
      project_description:
        description: 'Project Description'
        required: true
      stream_name:
        description: 'Stream Name'
        required: true
      stream_description:
        description: 'Stream Description'
        required: true
      role_name:
        description: 'Select a Project Role'
        required: true
        type: choice
        options:
          - componentMapOwner
          - componentMapViewer
          - hierarchyAdmin
          - icUser
          - noAccess
          - projectOwner
          - reporter
          - streamOwner
          - sysAdmin
          - triageStoreOwner
          - visitor
          - committer
          - Committer-Eaton
          - developer
          - Eaton Developer
          - Eaton Project Owner
          - observer
          - projectAdmin
          - serverAdmin
          - streamAdmin
          - wsReporter
      assignee_username:
        description: 'Project Assignee Username (required)'
        required: true
      group_name:
        description: 'Project Group Name (optional)'
        required: false
      stream_role_name:
        description: 'Select a Stream Role'
        required: true
        type: choice
        options:
          - componentMapOwner
          - componentMapViewer
          - hierarchyAdmin
          - icUser
          - noAccess
          - projectOwner
          - reporter
          - streamOwner
          - sysAdmin
          - triageStoreOwner
          - visitor
          - committer
          - Committer-Eaton
          - developer
          - Eaton Developer
          - Eaton Project Owner
          - observer
          - projectAdmin
          - serverAdmin
          - streamAdmin
          - wsReporter
      stream_assignee_username:
        description: 'Stream Assignee Username (required)'
        required: true
      stream_group_name:
        description: 'Stream Group Name (optional)'
        required: false
      scope:
        description: 'Scope'
        required: true

jobs:
  run-pipeline:
    runs-on: ubuntu-latest

    env:
      COVERITY_USERNAME: ${{ secrets.COVERITY_USERNAME }}
      COVERITY_API_KEY: ${{ secrets.COVERITY_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests

      - name: Create Project
        run: |
          python scripts/create_project.py \
            --name "${{ github.event.inputs.project_name }}" \
            --description "${{ github.event.inputs.project_description }}" \
            --username "$COVERITY_USERNAME" \
            --apikey "$COVERITY_API_KEY"

      - name: Assign Role to Project User
        run: |
          python scripts/update_role.py \
            --project "${{ github.event.inputs.project_name }}" \
            --role "${{ github.event.inputs.role_name }}" \
            --username "$COVERITY_USERNAME" \
            --apikey "$COVERITY_API_KEY" \
            --assignee "${{ github.event.inputs.assignee_username }}" \
            --scope "${{ github.event.inputs.scope }}"

      - name: Assign Role to Project Group (if provided)
        if: ${{ github.event.inputs.group_name != '' }}
        run: |
          python scripts/update_group_role.py \
            --project "${{ github.event.inputs.project_name }}" \
            --group "${{ github.event.inputs.group_name }}" \
            --role "${{ github.event.inputs.role_name }}" \
            --scope "${{ github.event.inputs.scope }}" \
            --username "$COVERITY_USERNAME" \
            --apikey "$COVERITY_API_KEY"

      - name: Create Stream
        run: |
          python scripts/create_stream.py \
            --name "${{ github.event.inputs.stream_name }}" \
            --description "${{ github.event.inputs.stream_description }}" \
            --project "${{ github.event.inputs.project_name }}" \
            --username "$COVERITY_USERNAME" \
            --apikey "$COVERITY_API_KEY"

      - name: Assign Role to Stream User
        run: |
          python scripts/assign_stream_role.py \
            --stream "${{ github.event.inputs.stream_name }}" \
            --role "${{ github.event.inputs.stream_role_name }}" \
            --scope "${{ github.event.inputs.scope }}" \
            --username "${{ github.event.inputs.stream_assignee_username }}" \
            --description "${{ github.event.inputs.stream_description }}" \
            --name "${{ github.event.inputs.stream_name }}" \
            --primary_project_name "${{ github.event.inputs.project_name }}" \
            --apiuser "$COVERITY_USERNAME" \
            --apikey "$COVERITY_API_KEY"

      - name: Assign Role to Stream Group (if provided)
        if: ${{ github.event.inputs.stream_group_name != '' }}
        run: |
          python scripts/assign_stream_role.py \
            --stream "${{ github.event.inputs.stream_name }}" \
            --role "${{ github.event.inputs.stream_role_name }}" \
            --scope "${{ github.event.inputs.scope }}" \
            --group "${{ github.event.inputs.stream_group_name }}" \
            --description "${{ github.event.inputs.stream_description }}" \
            --name "${{ github.event.inputs.stream_name }}" \
            --primary_project_name "${{ github.event.inputs.project_name }}" \
            --apiuser "$COVERITY_USERNAME" \
            --apikey "$COVERITY_API_KEY"
